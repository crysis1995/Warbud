// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Warbud.Revit.Statistics.Infrastructure.Context;

namespace Warbud.Revit.Statistics.Migrations
{
    [DbContext(typeof(StatisticContext))]
    [Migration("20211130103301_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("warbud.revit.statistics")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Warbud.Revit.Statistics.Entities.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("Warbud.Revit.Statistics.Entities.Statistic", b =>
                {
                    b.OwnsOne("Warbud.Revit.Statistics.ValueObjects.OperationData", "OperationData", b1 =>
                        {
                            b1.Property<int>("StatisticId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("AppName")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("AppName");

                            b1.Property<int>("OperationAmount")
                                .HasColumnType("int")
                                .HasColumnName("OperationAmount");

                            b1.Property<string>("OperationName")
                                .HasColumnType("text")
                                .HasColumnName("OperationName");

                            b1.Property<long>("OperationTimeMs")
                                .HasColumnType("bigint")
                                .HasColumnName("OperationTimeMs");

                            b1.HasKey("StatisticId");

                            b1.ToTable("Statistics");

                            b1.WithOwner()
                                .HasForeignKey("StatisticId");
                        });

                    b.OwnsOne("Warbud.Revit.Statistics.ValueObjects.UserByVariables", "UserByVariables", b1 =>
                        {
                            b1.Property<int>("StatisticId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<string>("ComputerName")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("ComputerName");

                            b1.Property<string>("UserDomainName")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("DomainName");

                            b1.Property<string>("UserName")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("UserName");

                            b1.HasKey("StatisticId");

                            b1.ToTable("Statistics");

                            b1.WithOwner()
                                .HasForeignKey("StatisticId");
                        });

                    b.Navigation("OperationData")
                        .IsRequired();

                    b.Navigation("UserByVariables")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
